s := TwoDBInitialize();

/*
Magma printing
*/

s`AutomorphismGroup := PermutationGroup<16 |  
\[ 14, 5, 12, 15, 6, 13, 4, 3, 11, 8, 1, 10, 2, 9, 16, 7 ],
\[ 16, 3, 11, 13, 12, 10, 6, 9, 4, 14, 15, 1, 8, 7, 2, 5 ]:
 Order := 16 >;
s`Blocks := {@ PowerSet(IntegerRing()) |
{ IntegerRing() | 1, 5 },
{ IntegerRing() | 2, 11 },
{ IntegerRing() | 3, 15 },
{ IntegerRing() | 4, 8 },
{ IntegerRing() | 6, 14 },
{ IntegerRing() | 7, 10 },
{ IntegerRing() | 9, 13 },
{ IntegerRing() | 12, 16 }
@};
s`Child := "8T2-4,4,2-g1-path5";
s`Degree := 16;
s`Filename := "16T4-4,4,4-g3-path15.m";
s`GaloisOrbit := [ PowerSequence(PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 >) |
[ PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 > |
[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ]
]
];
s`GaloisOrbitSize := 1;
s`Genus := 3;
s`Geometry := "Hyperbolic";
s`Level := 4;
s`MonodromyGroup := PermutationGroup<16 |  
\[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
\[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
\[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ] >;
s`Name := "16T4-4,4,4-g3-path15";
s`Orders := \[ 4, 4, 4 ];
s`Parents := [ Strings() | "32S3-8,4,8-g9-path6", "32S3-4,8,8-g9-path6", "32S3-8,8,4-g9-path6", "32S4-8,4,8-g9-path6", "32S4-4,8,8-g9-path6", "32S4-8,8,4-g9-path6", "32S2-4,4,4-g5-path39" ];
s`Passport := [ PowerSequence(PermutationGroup<16 |  
\[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
\[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
\[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ]:
 Order := 16 >) |
[ PermutationGroup<16 |  
\[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
\[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
\[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ]:
 Order := 16 > |
[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
[ 15, 8, 9, 6, 3, 12, 5, 14, 7, 1, 4, 11, 10, 16, 13, 2 ],
[ 8, 7, 6, 1, 4, 15, 11, 5, 12, 2, 10, 13, 16, 3, 14, 9 ]
]
];
s`PassportName := "16T4-4,4,4-g3";
s`PassportSize := 1;
s`PathNumber := 15;
s`PathToPP1 := [ Strings() | "PP1", "2T1-2,2,1-g0-path1", "4T2-2,2,2-g0-path3", "8T2-4,4,2-g1-path5", "16T4-4,4,4-g3-path15" ];
s`PermutationTriple := [ PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 > |
[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ]
];
s`PointedAutomorphismGroup := PermutationGroup<16 |  
\[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ]:
 Order := 4 >;
s`PointedPassport := [ PowerSequence(PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 >) |
[ PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 > |
[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
[ 15, 8, 9, 6, 3, 12, 5, 14, 7, 1, 4, 11, 10, 16, 13, 2 ],
[ 8, 7, 6, 1, 4, 15, 11, 5, 12, 2, 10, 13, 16, 3, 14, 9 ]
]
];
s`PointedPassportSize := 1;
s`RefinedPassport := [ PowerSequence(PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 >) |
[ PermutationGroup<16 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 ]:
 Order := 20922789888000 > |
[ 11, 13, 8, 7, 2, 5, 16, 10, 14, 12, 9, 3, 6, 1, 4, 15 ],
[ 3, 4, 13, 14, 15, 16, 1, 6, 10, 5, 8, 2, 7, 12, 9, 11 ],
[ 4, 10, 14, 5, 8, 3, 2, 1, 16, 11, 7, 9, 12, 15, 6, 13 ]
]
];
s`RefinedPassportSize := 1;

/*
Return for eval
*/

return s;
